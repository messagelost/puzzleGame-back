<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaclimb.puzzlegameback.mappers.ChapterMapper">

	<!--实体映射-->
	<resultMap id="base_result_map" type="com.javaclimb.puzzlegameback.entity.po.Chapter">
		<!--章节id-->
		<result column="chapter_id" property="chapterId"  />
		<!--章节名称-->
		<result column="name" property="name"  />
		<!--章节文本-->
		<result column="text" property="text"  />
		<!--创建时间-->
		<result column="create_time" property="createTime"  />
		<!--更新时间-->
		<result column="update_time" property="updateTime"  />
	</resultMap>


	<!-- 通用查询结果列-->
	<sql id="base_column_list">
		 chapter_id,name,text,create_time,update_time
		 
	</sql>

	<sql id="base_condition_filed">
		<if test="query.chapterId != null and query.chapterId!=''">
			 and  chapter_id = #{query.chapterId}
		</if>
		<if test="query.name != null and query.name!=''">
			 and  name = #{query.name}
		</if>
		<if test="query.text != null and query.text!=''">
			 and  text = #{query.text}
		</if>
		<if test="query.createTime != null and query.createTime!=''">
			 <![CDATA[ and  create_time=str_to_date(#{query.createTime}, '%Y-%m-%d') ]]>
		</if>
		<if test="query.updateTime != null and query.updateTime!=''">
			 <![CDATA[ and  update_time=str_to_date(#{query.updateTime}, '%Y-%m-%d') ]]>
		</if>
	</sql>

	<!-- 通用查询条件列-->
	<sql id="query_condition">
		<where>
			<include refid="base_condition_filed" />
			<if test="query.chapterIdFuzzy!= null  and query.chapterIdFuzzy!=''">
				 and  chapter_id like concat('%', #{query.chapterIdFuzzy}, '%')
			</if>
			<if test="query.nameFuzzy!= null  and query.nameFuzzy!=''">
				 and  name like concat('%', #{query.nameFuzzy}, '%')
			</if>
			<if test="query.textFuzzy!= null  and query.textFuzzy!=''">
				 and  text like concat('%', #{query.textFuzzy}, '%')
			</if>
			<if test="query.createTimeStart!= null and query.createTimeStart!=''">
				 <![CDATA[ and  create_time>=str_to_date(#{query.createTimeStart}, '%Y-%m-%d') ]]>
			</if>
			<if test="query.createTimeEnd!= null and query.createTimeEnd!=''">
				 <![CDATA[ and  create_time< date_sub(str_to_date(#{query.createTimeEnd},'%Y-%m-%d'),interval -1 day) ]]>
			</if>
			<if test="query.updateTimeStart!= null and query.updateTimeStart!=''">
				 <![CDATA[ and  update_time>=str_to_date(#{query.updateTimeStart}, '%Y-%m-%d') ]]>
			</if>
			<if test="query.updateTimeEnd!= null and query.updateTimeEnd!=''">
				 <![CDATA[ and  update_time< date_sub(str_to_date(#{query.updateTimeEnd},'%Y-%m-%d'),interval -1 day) ]]>
			</if>
		</where>
	</sql>

	<!-- 查询集合-->
	<select id="selectList" resultMap="base_result_map" >
		 SELECT <include refid="base_column_list" /> FROM chapter <include refid="query_condition" />
		 <if test="query.orderBy!=null">
			 order by ${query.orderBy}
		 </if>
		 <if test="query.simplePage!=null">
			 limit #{query.simplePage.start},#{query.simplePage.end}
		 </if>
	</select>

	<!-- 查询数量-->
	<select id="selectCount" resultType="java.lang.Integer" >
		 SELECT count(1) FROM chapter <include refid="query_condition" />
	</select>

	<!-- 插入 （匹配有值的字段）-->
	<insert id="insert" parameterType="com.javaclimb.puzzlegameback.entity.po.Chapter">
		 INSERT INTO chapter
		 <trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="bean.chapterId != null">
				 chapter_id,
			</if>
			<if test="bean.name != null">
				 name,
			</if>
			<if test="bean.text != null">
				 text,
			</if>
			<if test="bean.createTime != null">
				 create_time,
			</if>
			<if test="bean.updateTime != null">
				 update_time,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="bean.chapterId!=null">
				 #{bean.chapterId},
			</if>
			<if test="bean.name!=null">
				 #{bean.name},
			</if>
			<if test="bean.text!=null">
				 #{bean.text},
			</if>
			<if test="bean.createTime!=null">
				 #{bean.createTime},
			</if>
			<if test="bean.updateTime!=null">
				 #{bean.updateTime},
			</if>
		 </trim>
	</insert>

	<!-- 插入或者更新 （匹配有值的字段）-->
	<insert id="insertOrUpdate" parameterType="com.javaclimb.puzzlegameback.entity.po.Chapter">
		 INSERT INTO chapter
		 <trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.chapterId != null">
				 chapter_id,
			</if>
			<if test="bean.name != null">
				 name,
			</if>
			<if test="bean.text != null">
				 text,
			</if>
			<if test="bean.createTime != null">
				 create_time,
			</if>
			<if test="bean.updateTime != null">
				 update_time,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.chapterId!=null">
				 #{bean.chapterId},
			</if>
			<if test="bean.name!=null">
				 #{bean.name},
			</if>
			<if test="bean.text!=null">
				 #{bean.text},
			</if>
			<if test="bean.createTime!=null">
				 #{bean.createTime},
			</if>
			<if test="bean.updateTime!=null">
				 #{bean.updateTime},
			</if>
		 </trim>
		 on DUPLICATE key update 
		 <trim prefix="" suffix="" suffixOverrides=",">
			<if test="bean.chapterId!=null">
				 chapter_id = VALUES(chapter_id),
			</if>
			<if test="bean.name!=null">
				 name = VALUES(name),
			</if>
			<if test="bean.text!=null">
				 text = VALUES(text),
			</if>
			<if test="bean.createTime!=null">
				 create_time = VALUES(create_time),
			</if>
			<if test="bean.updateTime!=null">
				 update_time = VALUES(update_time),
			</if>
		 </trim>
	</insert>

	<!-- 添加 （批量插入）-->
	<insert id="insertBatch" parameterType="com.javaclimb.puzzlegameback.entity.po.Chapter">
		 INSERT INTO chapter(
			 chapter_id,
			 name,
			 text,
			 create_time,
			 update_time
		 )values
		 <foreach collection="list" item="item" separator=",">
			 (
				 #{item.chapterId},
				 #{item.name},
				 #{item.text},
				 #{item.createTime},
				 #{item.updateTime}
			 )
		 </foreach>
	</insert>

	<!-- 批量新增修改 （批量插入）-->
	<insert id="insertOrUpdateBatch" parameterType="com.javaclimb.puzzlegameback.entity.po.Chapter">
		 INSERT INTO chapter(
			 chapter_id,
			 name,
			 text,
			 create_time,
			 update_time
		 )values
		 <foreach collection="list" item="item" separator=",">
			 (
				 #{item.chapterId},
				 #{item.name},
				 #{item.text},
				 #{item.createTime},
				 #{item.updateTime}
			 )
		 </foreach>
			on DUPLICATE key update 
			chapter_id = VALUES(chapter_id),
			name = VALUES(name),
			text = VALUES(text),
			create_time = VALUES(create_time),
			update_time = VALUES(update_time)
	</insert>

	<!--多条件修改-->
	<update id="updateByParam" parameterType="com.javaclimb.puzzlegameback.entity.query.ChapterQuery">
		 UPDATE chapter
 		 <set> 
			<if test="bean.chapterId != null">
				 chapter_id = #{bean.chapterId},
			</if>
			<if test="bean.name != null">
				 name = #{bean.name},
			</if>
			<if test="bean.text != null">
				 text = #{bean.text},
			</if>
			<if test="bean.createTime != null">
				 create_time = #{bean.createTime},
			</if>
			<if test="bean.updateTime != null">
				 update_time = #{bean.updateTime},
			</if>
 		 </set>
 		 <include refid="query_condition" />
	</update>

	<!--多条件删除-->
	<delete id="deleteByParam">
		 delete from chapter
 		 <include refid="query_condition" />
	</delete>

	<!-- 根据ChapterId修改-->
	<update id="updateByChapterId" parameterType="com.javaclimb.puzzlegameback.entity.po.Chapter">
		 UPDATE chapter
 		 <set> 
			<if test="bean.name != null">
				 name = #{bean.name},
			</if>
			<if test="bean.text != null">
				 text = #{bean.text},
			</if>
			<if test="bean.createTime != null">
				 create_time = #{bean.createTime},
			</if>
			<if test="bean.updateTime != null">
				 update_time = #{bean.updateTime},
			</if>
 		 </set>
 		 where chapter_id=#{chapterId}
	</update>

	<!-- 根据ChapterId删除-->
	<delete id="deleteByChapterId">
		delete from chapter where chapter_id=#{chapterId}
	</delete>

	<!-- 根据PrimaryKey获取对象-->
	<select id="selectByChapterId" resultMap="base_result_map" >
		select <include refid="base_column_list" /> from chapter where chapter_id=#{chapterId}
	</select>

</mapper>