<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaclimb.puzzlegameback.mappers.UserStoryMapper">

	<!--实体映射-->
	<resultMap id="base_result_map" type="com.javaclimb.puzzlegameback.entity.po.UserStory">
		<!--用户id-->
		<result column="user_id" property="userId"  />
		<!--故事id-->
		<result column="story_id" property="storyId"  />
		<!--目前章节-->
		<result column="current_chapter" property="currentChapter"  />
	</resultMap>


	<!-- 通用查询结果列-->
	<sql id="base_column_list">
		 user_id,story_id,current_chapter
	</sql>

	<sql id="base_condition_filed">
		<if test="query.userId != null and query.userId!=''">
			 and  user_id = #{query.userId}
		</if>
		<if test="query.storyId != null and query.storyId!=''">
			 and  story_id = #{query.storyId}
		</if>
		<if test="query.currentChapter != null">
			 and  current_chapter = #{query.currentChapter}
		</if>
	</sql>

	<!-- 通用查询条件列-->
	<sql id="query_condition">
		<where>
			<include refid="base_condition_filed" />
			<if test="query.userIdFuzzy!= null  and query.userIdFuzzy!=''">
				 and  user_id like concat('%', #{query.userIdFuzzy}, '%')
			</if>
			<if test="query.storyIdFuzzy!= null  and query.storyIdFuzzy!=''">
				 and  story_id like concat('%', #{query.storyIdFuzzy}, '%')
			</if>
		</where>
	</sql>

	<!-- 查询集合-->
	<select id="selectList" resultMap="base_result_map" >
		 SELECT <include refid="base_column_list" /> FROM user_story <include refid="query_condition" />
		 <if test="query.orderBy!=null">
			 order by ${query.orderBy}
		 </if>
		 <if test="query.simplePage!=null">
			 limit #{query.simplePage.start},#{query.simplePage.end}
		 </if>
	</select>

	<!-- 查询数量-->
	<select id="selectCount" resultType="java.lang.Integer" >
		 SELECT count(1) FROM user_story <include refid="query_condition" />
	</select>

	<!-- 插入 （匹配有值的字段）-->
	<insert id="insert" parameterType="com.javaclimb.puzzlegameback.entity.po.UserStory">
		 INSERT INTO user_story
		 <trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="bean.userId != null">
				 user_id,
			</if>
			<if test="bean.storyId != null">
				 story_id,
			</if>
			<if test="bean.currentChapter != null">
				 current_chapter,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="bean.userId!=null">
				 #{bean.userId},
			</if>
			<if test="bean.storyId!=null">
				 #{bean.storyId},
			</if>
			<if test="bean.currentChapter!=null">
				 #{bean.currentChapter},
			</if>
		 </trim>
	</insert>

	<!-- 插入或者更新 （匹配有值的字段）-->
	<insert id="insertOrUpdate" parameterType="com.javaclimb.puzzlegameback.entity.po.UserStory">
		 INSERT INTO user_story
		 <trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.userId != null">
				 user_id,
			</if>
			<if test="bean.storyId != null">
				 story_id,
			</if>
			<if test="bean.currentChapter != null">
				 current_chapter,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.userId!=null">
				 #{bean.userId},
			</if>
			<if test="bean.storyId!=null">
				 #{bean.storyId},
			</if>
			<if test="bean.currentChapter!=null">
				 #{bean.currentChapter},
			</if>
		 </trim>
		 on DUPLICATE key update 
		 <trim prefix="" suffix="" suffixOverrides=",">
			<if test="bean.userId!=null">
				 user_id = VALUES(user_id),
			</if>
			<if test="bean.storyId!=null">
				 story_id = VALUES(story_id),
			</if>
			<if test="bean.currentChapter!=null">
				 current_chapter = VALUES(current_chapter),
			</if>
		 </trim>
	</insert>

	<!-- 添加 （批量插入）-->
	<insert id="insertBatch" parameterType="com.javaclimb.puzzlegameback.entity.po.UserStory">
		 INSERT INTO user_story(
			 user_id,
			 story_id,
			 current_chapter
		 )values
		 <foreach collection="list" item="item" separator=",">
			 (
				 #{item.userId},
				 #{item.storyId},
				 #{item.currentChapter}
			 )
		 </foreach>
	</insert>

	<!-- 批量新增修改 （批量插入）-->
	<insert id="insertOrUpdateBatch" parameterType="com.javaclimb.puzzlegameback.entity.po.UserStory">
		 INSERT INTO user_story(
			 user_id,
			 story_id,
			 current_chapter
		 )values
		 <foreach collection="list" item="item" separator=",">
			 (
				 #{item.userId},
				 #{item.storyId},
				 #{item.currentChapter}
			 )
		 </foreach>
			on DUPLICATE key update 
			user_id = VALUES(user_id),
			story_id = VALUES(story_id),
			current_chapter = VALUES(current_chapter)
	</insert>

	<!--多条件修改-->
	<update id="updateByParam" parameterType="com.javaclimb.puzzlegameback.entity.query.UserStoryQuery">
		 UPDATE user_story
 		 <set> 
			<if test="bean.userId != null">
				 user_id = #{bean.userId},
			</if>
			<if test="bean.storyId != null">
				 story_id = #{bean.storyId},
			</if>
			<if test="bean.currentChapter != null">
				 current_chapter = #{bean.currentChapter},
			</if>
 		 </set>
 		 <include refid="query_condition" />
	</update>

	<!--多条件删除-->
	<delete id="deleteByParam">
		 delete from user_story
 		 <include refid="query_condition" />
	</delete>

	<!-- 根据UserIdAndStoryId修改-->
	<update id="updateByUserIdAndStoryId" parameterType="com.javaclimb.puzzlegameback.entity.po.UserStory">
		 UPDATE user_story
 		 <set> 
			<if test="bean.currentChapter != null">
				 current_chapter = #{bean.currentChapter},
			</if>
 		 </set>
 		 where user_id=#{userId} and story_id=#{storyId}
	</update>

	<!-- 根据UserIdAndStoryId删除-->
	<delete id="deleteByUserIdAndStoryId">
		delete from user_story where user_id=#{userId} and story_id=#{storyId}
	</delete>

	<!-- 根据PrimaryKey获取对象-->
	<select id="selectByUserIdAndStoryId" resultMap="base_result_map" >
		select <include refid="base_column_list" /> from user_story where user_id=#{userId} and story_id=#{storyId}
	</select>

</mapper>